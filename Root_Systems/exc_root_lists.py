## Developed by Rafael Stekolshchik. July, 2024

rlist_G2 = \
[\
[1, 0] ,
[0, 1] ,
[1, 1] ,
[1, 2] ,
[1, 3] ,
[2, 3] ,]

rlist_F4 = \
[\
[1, 0, 0, 0] ,
[0, 1, 0, 0] ,
[0, 0, 1, 0] ,
[0, 0, 0, 1] ,
[1, 1, 0, 0] ,
[0, 1, 1, 0] ,
[0, 0, 1, 1] ,
[1, 1, 1, 0] ,
[0, 1, 2, 0] ,
[0, 1, 1, 1] ,
[1, 1, 2, 0] ,
[1, 1, 1, 1] ,
[0, 1, 2, 1] ,
[1, 2, 2, 0] ,
[1, 1, 2, 1] ,
[0, 1, 2, 2] ,
[1, 2, 2, 1] ,
[1, 1, 2, 2] ,
[1, 2, 3, 1] ,
[1, 2, 2, 2] ,
[1, 2, 3, 2] ,
[1, 2, 4, 2] ,
[1, 3, 4, 2] ,
[2, 3, 4, 2] ]

rlist_E6 = \
[ \
[1, 0, 0, 0, 0, 0] ,
[0, 1, 0, 0, 0, 0] ,
[0, 0, 1, 0, 0, 0] ,
[0, 0, 0, 1, 0, 0] ,
[0, 0, 0, 0, 1, 0] ,
[0, 0, 0, 0, 0, 1] ,
[1, 0, 1, 0, 0, 0] ,
[0, 1, 0, 1, 0, 0] ,
[0, 0, 1, 1, 0, 0] ,
[0, 0, 0, 1, 1, 0] ,
[0, 0, 0, 0, 1, 1] ,
[1, 0, 1, 1, 0, 0] ,
[0, 1, 1, 1, 0, 0] ,
[0, 1, 0, 1, 1, 0] ,
[0, 0, 1, 1, 1, 0] ,
[0, 0, 0, 1, 1, 1] ,
[1, 1, 1, 1, 0, 0] ,
[1, 0, 1, 1, 1, 0] ,
[0, 1, 1, 1, 1, 0] ,
[0, 1, 0, 1, 1, 1] ,
[0, 0, 1, 1, 1, 1] ,
[1, 1, 1, 1, 1, 0] ,
[1, 0, 1, 1, 1, 1] ,
[0, 1, 1, 2, 1, 0] ,
[0, 1, 1, 1, 1, 1] ,
[1, 1, 1, 2, 1, 0] ,
[1, 1, 1, 1, 1, 1] ,
[0, 1, 1, 2, 1, 1] ,
[1, 1, 2, 2, 1, 0] ,
[1, 1, 1, 2, 1, 1] ,
[0, 1, 1, 2, 2, 1] ,
[1, 1, 2, 2, 1, 1] ,
[1, 1, 1, 2, 2, 1] ,
[1, 1, 2, 2, 2, 1] ,
[1, 1, 2, 3, 2, 1] ,
[1, 2, 2, 3, 2, 1] ,]

rlist_E7 = \
[ \
[1, 0, 0, 0, 0, 0, 0] ,
[0, 1, 0, 0, 0, 0, 0] ,
[0, 0, 1, 0, 0, 0, 0] ,
[0, 0, 0, 1, 0, 0, 0] ,
[0, 0, 0, 0, 1, 0, 0] ,
[0, 0, 0, 0, 0, 1, 0] ,
[0, 0, 0, 0, 0, 0, 1] ,
[1, 0, 1, 0, 0, 0, 0] ,
[0, 1, 0, 1, 0, 0, 0] ,
[0, 0, 1, 1, 0, 0, 0] ,
[0, 0, 0, 1, 1, 0, 0] ,
[0, 0, 0, 0, 1, 1, 0] ,
[0, 0, 0, 0, 0, 1, 1] ,
[1, 0, 1, 1, 0, 0, 0] ,
[0, 1, 1, 1, 0, 0, 0] ,
[0, 1, 0, 1, 1, 0, 0] ,
[0, 0, 1, 1, 1, 0, 0] ,
[0, 0, 0, 1, 1, 1, 0] ,
[0, 0, 0, 0, 1, 1, 1] ,
[1, 1, 1, 1, 0, 0, 0] ,
[1, 0, 1, 1, 1, 0, 0] ,
[0, 1, 1, 1, 1, 0, 0] ,
[0, 1, 0, 1, 1, 1, 0] ,
[0, 0, 1, 1, 1, 1, 0] ,
[0, 0, 0, 1, 1, 1, 1] ,
[1, 1, 1, 1, 1, 0, 0] ,
[1, 0, 1, 1, 1, 1, 0] ,
[0, 1, 1, 2, 1, 0, 0] ,
[0, 1, 1, 1, 1, 1, 0] ,
[0, 1, 0, 1, 1, 1, 1] ,
[0, 0, 1, 1, 1, 1, 1] ,
[1, 1, 1, 2, 1, 0, 0] ,
[1, 1, 1, 1, 1, 1, 0] ,
[1, 0, 1, 1, 1, 1, 1] ,
[0, 1, 1, 2, 1, 1, 0] ,
[0, 1, 1, 1, 1, 1, 1] ,
[1, 1, 2, 2, 1, 0, 0] ,
[1, 1, 1, 2, 1, 1, 0] ,
[1, 1, 1, 1, 1, 1, 1] ,
[0, 1, 1, 2, 2, 1, 0] ,
[0, 1, 1, 2, 1, 1, 1] ,
[1, 1, 2, 2, 1, 1, 0] ,
[1, 1, 1, 2, 2, 1, 0] ,
[1, 1, 1, 2, 1, 1, 1] ,
[0, 1, 1, 2, 2, 1, 1] ,
[1, 1, 2, 2, 2, 1, 0] ,
[1, 1, 2, 2, 1, 1, 1] ,
[1, 1, 1, 2, 2, 1, 1] ,
[0, 1, 1, 2, 2, 2, 1] ,
[1, 1, 2, 3, 2, 1, 0] ,
[1, 1, 2, 2, 2, 1, 1] ,
[1, 1, 1, 2, 2, 2, 1] ,
[1, 2, 2, 3, 2, 1, 0] ,
[1, 1, 2, 3, 2, 1, 1] ,
[1, 1, 2, 2, 2, 2, 1] ,
[1, 2, 2, 3, 2, 1, 1] ,
[1, 1, 2, 3, 2, 2, 1] ,
[1, 2, 2, 3, 2, 2, 1] ,
[1, 1, 2, 3, 3, 2, 1] ,
[1, 2, 2, 3, 3, 2, 1] ,
[1, 2, 2, 4, 3, 2, 1] ,
[1, 2, 3, 4, 3, 2, 1] ,
[2, 2, 3, 4, 3, 2, 1] , ]

rlist_E8 = \
[ \
 [1, 0, 0, 0, 0, 0, 0, 0] ,
[0, 1, 0, 0, 0, 0, 0, 0] ,
[0, 0, 1, 0, 0, 0, 0, 0] ,
[0, 0, 0, 1, 0, 0, 0, 0] ,
[0, 0, 0, 0, 1, 0, 0, 0] ,
[0, 0, 0, 0, 0, 1, 0, 0] ,
[0, 0, 0, 0, 0, 0, 1, 0] ,
[0, 0, 0, 0, 0, 0, 0, 1] ,
[1, 0, 1, 0, 0, 0, 0, 0] ,
[0, 1, 0, 1, 0, 0, 0, 0] ,
[0, 0, 1, 1, 0, 0, 0, 0] ,
[0, 0, 0, 1, 1, 0, 0, 0] ,
[0, 0, 0, 0, 1, 1, 0, 0] ,
[0, 0, 0, 0, 0, 1, 1, 0] ,
[0, 0, 0, 0, 0, 0, 1, 1] ,
[1, 0, 1, 1, 0, 0, 0, 0] ,
[0, 1, 1, 1, 0, 0, 0, 0] ,
[0, 1, 0, 1, 1, 0, 0, 0] ,
[0, 0, 1, 1, 1, 0, 0, 0] ,
[0, 0, 0, 1, 1, 1, 0, 0] ,
[0, 0, 0, 0, 1, 1, 1, 0] ,
[0, 0, 0, 0, 0, 1, 1, 1] ,
[1, 1, 1, 1, 0, 0, 0, 0] ,
[1, 0, 1, 1, 1, 0, 0, 0] ,
[0, 1, 1, 1, 1, 0, 0, 0] ,
[0, 1, 0, 1, 1, 1, 0, 0] ,
[0, 0, 1, 1, 1, 1, 0, 0] ,
[0, 0, 0, 1, 1, 1, 1, 0] ,
[0, 0, 0, 0, 1, 1, 1, 1] ,
[1, 1, 1, 1, 1, 0, 0, 0] ,
[1, 0, 1, 1, 1, 1, 0, 0] ,
[0, 1, 1, 2, 1, 0, 0, 0] ,
[0, 1, 1, 1, 1, 1, 0, 0] ,
[0, 1, 0, 1, 1, 1, 1, 0] ,
[0, 0, 1, 1, 1, 1, 1, 0] ,
[0, 0, 0, 1, 1, 1, 1, 1] ,
[1, 1, 1, 2, 1, 0, 0, 0] ,
[1, 1, 1, 1, 1, 1, 0, 0] ,
[1, 0, 1, 1, 1, 1, 1, 0] ,
[0, 1, 1, 2, 1, 1, 0, 0] ,
[0, 1, 1, 1, 1, 1, 1, 0] ,
[0, 1, 0, 1, 1, 1, 1, 1] ,
[0, 0, 1, 1, 1, 1, 1, 1] ,
[1, 1, 2, 2, 1, 0, 0, 0] ,
[1, 1, 1, 2, 1, 1, 0, 0] ,
[1, 1, 1, 1, 1, 1, 1, 0] ,
[1, 0, 1, 1, 1, 1, 1, 1] ,
[0, 1, 1, 2, 2, 1, 0, 0] ,
[0, 1, 1, 2, 1, 1, 1, 0] ,
[0, 1, 1, 1, 1, 1, 1, 1] ,
[1, 1, 2, 2, 1, 1, 0, 0] ,
[1, 1, 1, 2, 2, 1, 0, 0] ,
[1, 1, 1, 2, 1, 1, 1, 0] ,
[1, 1, 1, 1, 1, 1, 1, 1] ,
[0, 1, 1, 2, 2, 1, 1, 0] ,
[0, 1, 1, 2, 1, 1, 1, 1] ,
[1, 1, 2, 2, 2, 1, 0, 0] ,
[1, 1, 2, 2, 1, 1, 1, 0] ,
[1, 1, 1, 2, 2, 1, 1, 0] ,
[1, 1, 1, 2, 1, 1, 1, 1] ,
[0, 1, 1, 2, 2, 2, 1, 0] ,
[0, 1, 1, 2, 2, 1, 1, 1] ,
[1, 1, 2, 3, 2, 1, 0, 0] ,
[1, 1, 2, 2, 2, 1, 1, 0] ,
[1, 1, 2, 2, 1, 1, 1, 1] ,
[1, 1, 1, 2, 2, 2, 1, 0] ,
[1, 1, 1, 2, 2, 1, 1, 1] ,
[0, 1, 1, 2, 2, 2, 1, 1] ,
[1, 2, 2, 3, 2, 1, 0, 0] ,
[1, 1, 2, 3, 2, 1, 1, 0] ,
[1, 1, 2, 2, 2, 2, 1, 0] ,
[1, 1, 2, 2, 2, 1, 1, 1] ,
[1, 1, 1, 2, 2, 2, 1, 1] ,
[0, 1, 1, 2, 2, 2, 2, 1] ,
[1, 2, 2, 3, 2, 1, 1, 0] ,
[1, 1, 2, 3, 2, 2, 1, 0] ,
[1, 1, 2, 3, 2, 1, 1, 1] ,
[1, 1, 2, 2, 2, 2, 1, 1] ,
[1, 1, 1, 2, 2, 2, 2, 1] ,
[1, 2, 2, 3, 2, 2, 1, 0] ,
[1, 2, 2, 3, 2, 1, 1, 1] ,
[1, 1, 2, 3, 3, 2, 1, 0] ,
[1, 1, 2, 3, 2, 2, 1, 1] ,
[1, 1, 2, 2, 2, 2, 2, 1] ,
[1, 2, 2, 3, 3, 2, 1, 0] ,
[1, 2, 2, 3, 2, 2, 1, 1] ,
[1, 1, 2, 3, 3, 2, 1, 1] ,
[1, 1, 2, 3, 2, 2, 2, 1] ,
[1, 2, 2, 4, 3, 2, 1, 0] ,
[1, 2, 2, 3, 3, 2, 1, 1] ,
[1, 2, 2, 3, 2, 2, 2, 1] ,
[1, 1, 2, 3, 3, 2, 2, 1] ,
[1, 2, 3, 4, 3, 2, 1, 0] ,
[1, 2, 2, 4, 3, 2, 1, 1] ,
[1, 2, 2, 3, 3, 2, 2, 1] ,
[1, 1, 2, 3, 3, 3, 2, 1] ,
[2, 2, 3, 4, 3, 2, 1, 0] ,
[1, 2, 3, 4, 3, 2, 1, 1] ,
[1, 2, 2, 4, 3, 2, 2, 1] ,
[1, 2, 2, 3, 3, 3, 2, 1] ,
[2, 2, 3, 4, 3, 2, 1, 1] ,
[1, 2, 3, 4, 3, 2, 2, 1] ,
[1, 2, 2, 4, 3, 3, 2, 1] ,
[2, 2, 3, 4, 3, 2, 2, 1] ,
[1, 2, 3, 4, 3, 3, 2, 1] ,
[1, 2, 2, 4, 4, 3, 2, 1] ,
[2, 2, 3, 4, 3, 3, 2, 1] ,
[1, 2, 3, 4, 4, 3, 2, 1] ,
[2, 2, 3, 4, 4, 3, 2, 1] ,
[1, 2, 3, 5, 4, 3, 2, 1] ,
[2, 2, 3, 5, 4, 3, 2, 1] ,
[1, 3, 3, 5, 4, 3, 2, 1] ,
[2, 3, 3, 5, 4, 3, 2, 1] ,
[2, 2, 4, 5, 4, 3, 2, 1] ,
[2, 3, 4, 5, 4, 3, 2, 1] ,
[2, 3, 4, 6, 4, 3, 2, 1] ,
[2, 3, 4, 6, 5, 3, 2, 1] ,
[2, 3, 4, 6, 5, 4, 2, 1] ,
[2, 3, 4, 6, 5, 4, 3, 1] ,
[2, 3, 4, 6, 5, 4, 3, 2] ,]

def getExceptRootList(diagram, n):
    if diagram == 'E': 
       if n == 6:
         return rlist_E6
       elif n == 7: 
         return rlist_E7
       elif n == 8: 
         return rlist_E8
    elif diagram == 'F': 
       return rlist_F4
    elif diagram == 'G':
       return rlist_G2
    else:
      print('Error in name of diagram oe number of vertices')
      
    
    
    
 